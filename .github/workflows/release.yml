name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      build_number: ${{ steps.get_version.outputs.build_number }}
    steps:
      - name: Get version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          VERSION_PARTS=(${VERSION/+/ })
          echo "version=${VERSION_PARTS[0]}" >> $GITHUB_OUTPUT
          echo "build_number=${VERSION_PARTS[1]:-1}" >> $GITHUB_OUTPUT

  build_android:
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.8'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      # Configurer la keystore Ã  partir des secrets
      - name: Setup Android keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 -d > android/app/upload-keystore.jks
          echo "storePassword=$KEYSTORE_PASSWORD" > android/key.properties
          echo "keyPassword=$KEY_PASSWORD" >> android/key.properties
          echo "keyAlias=$KEY_ALIAS" >> android/key.properties
          echo "storeFile=../app/upload-keystore.jks" >> android/key.properties

      - name: Build APK
        run: flutter build apk --release --build-name=${{ needs.version.outputs.version }} --build-number=${{ needs.version.outputs.build_number }}
      
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Build App Bundle
        run: flutter build appbundle --release --build-name=${{ needs.version.outputs.version }} --build-number=${{ needs.version.outputs.build_number }}
      
      - name: Upload App Bundle
        uses: actions/upload-artifact@v4
        with:
          name: release-aab
          path: build/app/outputs/bundle/release/app-release.aab

  build_ios:
    needs: version
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.8'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build iOS
        run: |
          flutter build ios --release --no-codesign --build-name=${{ needs.version.outputs.version }} --build-number=${{ needs.version.outputs.build_number }}
          cd build/ios/iphoneos
          mkdir Payload
          cp -r Runner.app Payload
          zip -r app.ipa Payload
          
      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/iphoneos/app.ipa
          
  build_linux:
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.8'
          channel: 'stable'
      
      - name: Install Linux dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
          
      - name: Enable Flutter Linux desktop
        run: flutter config --enable-linux-desktop
        
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build Linux
        run: flutter build linux --release --build-name=${{ needs.version.outputs.version }} --build-number=${{ needs.version.outputs.build_number }}
          
      - name: Create Linux archive
        run: |
          cd build/linux/x64/release/bundle
          tar czf ../../../../../shootingscore-linux.tar.gz .
          
      - name: Upload Linux build
        uses: actions/upload-artifact@v4
        with:
          name: release-linux
          path: shootingscore-linux.tar.gz

  create_release:
    needs: [version, build_android, build_ios, build_linux]
    runs-on: ubuntu-latest
    permissions:
      contents: write    # This permission is required for creating releases
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ needs.version.outputs.version }}
          draft: false
          prerelease: false
          files: |
            release-apk/app-release.apk
            release-aab/app-release.aab
            release-ipa/app.ipa
            release-linux/shootingscore-linux.tar.gz
